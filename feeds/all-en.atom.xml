<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Mr.King的博客</title><link href="/" rel="alternate"></link><link href="/feeds/all-en.atom.xml" rel="self"></link><id>/</id><updated>2013-01-16T00:00:00+01:00</updated><entry><title>用github pages和pelican搭建免费的个人博客</title><link href="/yong-github-pageshe-pelicanda-jian-mian-fei-de-ge-ren-bo-ke.html" rel="alternate"></link><updated>2013-01-16T00:00:00+01:00</updated><author><name>Mr.King</name></author><id>tag:,2013-01-16:yong-github-pageshe-pelicanda-jian-mian-fei-de-ge-ren-bo-ke.html</id><summary type="html">&lt;p&gt;最近有个需求，就是将一系列md文件以博客的形式发布出来。在网上搜了下解决方案，不知道哪种好，去Cpyug上问，发现了&lt;a href="https://github.com/getpelican/pelican"&gt;pelican&lt;/a&gt;这么个好东西。开始想用openshift托管，可是现在电脑上没有openshift的环境而且也不知道怎么弄，无意中看到了gitcafe pages+pelican的解决方案(&lt;a href="http://riku.gitcafe.com/pelican-gitcafe.html"&gt;这里&lt;/a&gt;)。可是想到gitcafe要收费了，而且免费的托管空间只有200多k，又想起原先在阮一峰的博客上看到过用github pages + jekyll的方式搭建博客(&lt;a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html"&gt;这里&lt;/a&gt;)，github是免费而且没有限制的啊！于是我想着把这两个整合下，即用github pages + pelican的解决方案。&lt;/p&gt;
&lt;p&gt;我的操作系统： &lt;strong&gt;Ubuntu 12.04&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先安装pelican：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pip install pelican&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建一个blog目录：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mkdir yourblog&lt;/p&gt;
&lt;p&gt;cd yourblog&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;创建一个博客：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pelican-quickstart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;按照提示一步步的设置，不知道怎么设置的按默认的就行，后面可以在&lt;strong&gt;pelicanconf.py&lt;/strong&gt;这个文件中改。&lt;/p&gt;
&lt;p&gt;接着，在github上创建一个项目，比如：myblog。把这个项目git clone到 yourblog这个文件夹下面。进入这个目录：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd myblog&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后，创建一个没有父节点的分支gh-pages。因为github规定，只有该分支中的页面，才会生成网页文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git checkout --orphan gh-pages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接着，我们就可以用pelican写博客了，pelican支持markdown等流行的文档格式。我用mardown举例，具体怎么写可以去看pelican的&lt;a href="http://docs.getpelican.com/en/3.1.1/"&gt;文档&lt;/a&gt;.
进入content目录，用编辑器创建一个文件，写入博客内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Date: 2010-12-03 #日期&lt;/p&gt;
&lt;p&gt;Title: My super title ＃标题&lt;/p&gt;
&lt;p&gt;Tags: thats, awesome #标签 &lt;/p&gt;
&lt;p&gt;文章内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其中Date和Title是必须的，其它的可以不写，还有很多别的元数据属性，具体参见文档。当然也可以不写Date和Title，但是文件的命名有相关的规定，这点文档中也有。&lt;/p&gt;
&lt;p&gt;写完了文章，就该发布了！回到yourblog的根目录，用下面的命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pelican -s pelicanconf.py content -o myblog&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就会把content中的md文件，翻译成html静态页面，这些页面存放在myblog中。进入myblog目录,提交文章到github&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git add .&lt;/p&gt;
&lt;p&gt;git commit -m "first blog"&lt;/p&gt;
&lt;p&gt;git push -u origin gh-pages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上传成功之后，等10分钟左右，访问http://username.github.com/myblog/就可以看到Blog已经生成了（将username换成你的用户名,myblog对应你在github上创建的项目）.&lt;/p&gt;
&lt;p&gt;关于github和git的使用，这里就不说了。&lt;strong&gt;友情提示&lt;/strong&gt;：别忘了在github上配置RSA公钥&lt;/p&gt;</summary><category term="github pages"></category><category term="pelican"></category><category term="markdown"></category></entry></feed>